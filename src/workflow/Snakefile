import os

# Get configuration settings
configfile: "config.yaml"
shell.prefix('export PATH=$HOME/miniconda3/bin:$PATH; source activate cavalri;')

# Set up a temp folder to store pickles
temp_dir = config['tmp_dir']

# Define cases
CASES, = glob_wildcards(os.path.join(temp_dir, "{case}.pickle"))

rule all:
    input:
        expand(os.path.join(temp_dir, "{case}.full.pickle"), case = CASES)

# rule build_cohort:
#     input:
#         expand(os.path.join(vcf_dir, "{case}.vcf"), case = CASES)
#     params:
#         cases = '"{}"'.format(str(list(CASES)))
#     output:
#         os.path.join(temp_dir, 'cohort.pickle')
#     shell:
#         'python3 build_cohort.py --cases {params.cases} -o {output}'


# rule read_case_variants:
#     input:
#         os.path.join(temp_dir, 'cohort.pickle')
#     output:
#         temp(os.path.join(temp_dir, 'cases', "{case}.variants.pickle"))
#     shell:
#         'python read_case_variants.py --cohort {input} --case {wildcards.case} -o {output}'


# rule run_cohort:
#     input:
#         expand(os.path.join(temp_dir, 'cases', "{case}.variants.pickle"), case = CASES)
#     params:
#         case_pickle_dir = os.path.join(temp_dir, 'cases'),
#         cohort = os.path.join(temp_dir, 'cohort.pickle')
#     output:
#         temp(os.path.join(temp_dir, 'cohort_annotated.txt'))
#     shell:
#         'python3 run_cohort.py -i {params.case_pickle_dir} --cohort {params.cohort} -o {output}'


rule run_case:
    input:
        os.path.join(temp_dir, "{case}.pickle")
    output:
        os.path.join(temp_dir, "{case}.full.pickle")
    shell:
        'python3 scripts/run_case.py --input {input} -o {output}'