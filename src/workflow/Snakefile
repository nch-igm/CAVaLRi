import os

# Get configuration settings
configfile: "config.yaml"
shell.prefix('source /igm/home/rsrxs003/miniconda3/bin/activate cavalri;')

# Set up a temp folder to store pickles
temp_dir = config['tmp_dir']

# Define cases
CASES, = glob_wildcards(os.path.join(temp_dir, "{case}.pickle"))
# CASES = ['M19-5626']
# CASES = ['DDDP109893', 'DDDP111227', 'DDDP111317', 'DDDP105431', 'DDDP111119', 'DDDP111515', 'DDDP103666', 'DDDP111487', 'DDDP101866', 'DDDP110776', 'DDDP102111', 'DDDP105394', 'DDDP108067', 'DDDP110983', 'DDDP101839', 'DDDP111249', 'DDDP108234', 'DDDP109404', 'DDDP102294', 'DDDP110970', 'DDDP111096', 'DDDP110961', 'DDDP108441', 'DDDP102726', 'DDDP111250', 'DDDP110800', 'DDDP104795', 'DDDP105767', 'DDDP108836', 'DDDP105749', 'DDDP111151', 'DDDP111106', 'DDDP101224', 'DDDP107459', 'DDDP102052', 'DDDP111322', 'DDDP103048', 'DDDP111265', 'DDDP107978', 'DDDP106414', 'DDDP108896', 'DDDP101851', 'DDDP100285', 'DDDP105451', 'DDDP105217', 'DDDP102005', 'DDDP107286', 'DDDP108492', 'DDDP110796', 'DDDP102221', 'DDDP102140', 'DDDP100030', 'DDDP109352', 'DDDP111513', 'DDDP104896', 'DDDP100281', 'DDDP103710', 'DDDP103071', 'DDDP109873', 'DDDP111081', 'DDDP103044', 'DDDP111027', 'DDDP111423', 'DDDP111219', 'DDDP100284', 'DDDP110760', 'DDDP111390', 'DDDP111516', 'DDDP102138', 'DDDP102389', 'DDDP100213', 'DDDP106745', 'DDDP111596', 'DDDP101867', 'DDDP102497', 'DDDP111211', 'DDDP108406', 'DDDP111178', 'DDDP101854', 'DDDP111619', 'DDDP101100', 'DDDP102547', 'DDDP110962', 'DDDP107416', 'DDDP111187', 'DDDP108415', 'DDDP104617', 'DDDP110890', 'DDDP111286', 'DDDP110872', 'DDDP112690', 'DDDP100091', 'DDDP105140', 'DDDP102251', 'DDDP111242', 'DDDP102206', 'DDDP106875', 'DDDP111350', 'DDDP110825', 'DDDP102680', 'DDDP101852', 'DDDP110753', 'DDDP109995', 'DDDP105999', 'DDDP112652', 'DDDP111428', 'DDDP111266', 'DDDP102051', 'DDDP102114', 'DDDP102589', 'DDDP106981', 'DDDP103122', 'DDDP100161', 'DDDP106936', 'DDDP110896', 'DDDP111198', 'DDDP110784', 'DDDP110748', 'DDDP111459', 'DDDP102110', 'DDDP102297', 'DDDP111468', 'DDDP105942', 'DDDP102594', 'DDDP105825', 'DDDP107364', 'DDDP110713', 'DDDP105223', 'DDDP111703', 'DDDP111262', 'DDDP111217', 'DDDP102820', 'DDDP111190', 'DDDP111271', 'DDDP108103', 'DDDP100264']
# CASES = ['M19-5816', 'M20-4494', 'M19-1704', 'M19-1533', 'M17-3021', 'M18-4171', 'M20-1533', 'M20-3776', 'M19-794', 'M18-2443', 'M19-419', 'M18-5290', 'M20-5584', 'M17-548', 'M19-5314', 'M18-6142', 'M18-5360', 'M19-7143', 'M18-678', 'M19-2460', 'M17-158', 'M17-4550', 'M19-5007', 'M18-860', 'M20-3072', 'M19-2092', 'M18-4997', 'M20-2677', 'M18-5888', 'M17-2779', 'M19-7222', 'M17-1149', 'M19-1632', 'M19-2945', 'M18-5107', 'M19-3884', 'M17-3373', 'M20-3586', 'M20-3378', 'M20-3165', 'M19-1991', 'M18-441', 'M19-4789', 'M18-6190', 'M20-3338', 'M18-6299', 'M19-1698', 'M19-7487', 'M18-97', 'M19-4848', 'M19-1117', 'M19-6108', 'M17-3331', 'M18-4107', 'M17-2653', 'M20-2527', 'M20-1636', 'M19-6009', 'M20-3328', 'M18-3813', 'M19-326', 'M19-1007', 'M20-3569', 'M18-4507', 'M19-3489', 'M17-3160', 'M18-5245', 'M18-2409', 'M17-326', 'M19-5955', 'M20-2013', 'M17-1531', 'M20-2368', 'M18-3986', 'M17-854', 'M18-4230', 'M19-3235', 'M20-984', 'M17-831', 'M18-4878', 'M19-3033', 'M17-4608', 'M19-1276', 'M17-4725', 'M17-3710', 'M20-4497', 'M19-1233', 'M19-6559', 'M18-4221', 'M19-521', 'M18-120', 'M18-4258', 'M18-6436', 'M19-5147', 'M20-1882', 'M20-2692', 'M17-3055', 'M18-3537', 'M17-1369', 'M20-342', 'M20-2062', 'M18-2316', 'M20-5246', 'M20-3905', 'M20-3545', 'M20-631', 'M17-2379', 'M19-4273', 'M18-4247', 'M19-6334', 'M17-3729', 'M19-5218', 'M20-37', 'M20-704', 'M17-4662', 'M17-4854', 'M20-210', 'M17-676', 'M18-1803', 'M18-6418', 'M19-3215', 'M19-6122', 'M18-2474', 'M17-3196', 'M19-952', 'M17-3989', 'M19-7871', 'M19-2487', 'M20-2207', 'M20-1742', 'M18-2298', 'M20-923', 'M19-5159', 'M18-1683', 'M18-5409', 'M19-3546', 'M19-4349', 'M20-2442', 'M17-5210', 'M20-71', 'M20-4305', 'M19-120', 'M19-3807', 'M18-1971', 'M20-2166', 'M19-3346', 'M17-2459', 'M17-4966', 'M19-5626', 'M20-3976', 'M19-4186', 'M18-2111', 'M18-2042', 'M20-3603', 'M17-180', 'M17-5149', 'M18-1558', 'M17-4857', 'M18-5815', 'M20-3798', 'M17-1768', 'M20-5190', 'M19-7817', 'M20-4254', 'M17-1746', 'M19-4361', 'M18-6011', 'M18-6117', 'M17-2896', 'M17-4228', 'M17-4858', 'M19-1931', 'M20-285', 'M18-1768', 'M18-3785', 'M18-3795', 'M17-1725', 'M17-2373', 'M20-2030', 'M18-6385']
CASES = [c for c in CASES if c.find('.full') == -1]

rule all:
    input:
        expand(os.path.join(temp_dir, "{case}.full.pickle"), case = CASES)

# rule build_cohort:
#     input:
#         expand(os.path.join(vcf_dir, "{case}.vcf"), case = CASES)
#     params:
#         cases = '"{}"'.format(str(list(CASES)))
#     output:
#         os.path.join(temp_dir, 'cohort.pickle')
#     shell:
#         'python3 build_cohort.py --cases {params.cases} -o {output}'


# rule read_case_variants:
#     input:
#         os.path.join(temp_dir, 'cohort.pickle')
#     output:
#         temp(os.path.join(temp_dir, 'cases', "{case}.variants.pickle"))
#     shell:
#         'python read_case_variants.py --cohort {input} --case {wildcards.case} -o {output}'


# rule run_cohort:
#     input:
#         expand(os.path.join(temp_dir, 'cases', "{case}.variants.pickle"), case = CASES)
#     params:
#         case_pickle_dir = os.path.join(temp_dir, 'cases'),
#         cohort = os.path.join(temp_dir, 'cohort.pickle')
#     output:
#         temp(os.path.join(temp_dir, 'cohort_annotated.txt'))
#     shell:
#         'python3 run_cohort.py -i {params.case_pickle_dir} --cohort {params.cohort} -o {output}'


rule run_case:
    input:
        os.path.join(temp_dir, "{case}.pickle")
    output:
        os.path.join(temp_dir, "{case}.full.pickle")
    shell:
        'python scripts/run_case.py --input {input} -o {output}'